#!/usr/bin/env bash

# Verify what is about to be pushed.
#
# Called by "git push" after it has checked the remote status, but
# before anything has been pushed.
#
# If this script exits with a non-zero status nothing will be pushed.

# Flutter Analyze

printf "\e[33;1m%s\e[0m\n" 'Running flutter analyze.'

result=$(flutter analyze lib)

if [ $? -ne 0 ]; then
  echo -e "$result \n"
  printf "\e[31;1m%s\e[0m\n" 'Flutter analyze found the above issues, please fix, commit and push again.'
  exit 1
fi

echo "$result"

# Check the version is updated before we can push!

PVER=$(egrep '^version:' pubspec.yaml | cut -d' ' -f2 | cut -d'+' -f1)

if [ -d snap ]; then
    SVER=$(egrep '^version:' snap/snapcraft.yaml | cut -d' ' -f2 | cut -d'+' -f1)

    if [ "${PVER}" != "${SVER}" ]; then
	printf "\e[31;1m%s\e[0m\n" "Version mismatch pubspec.yaml (${PVER}) and snap/snapcraft.yaml (${SVER})."
	echo 'Run `make versions` and then commit.'
	exit 2
    fi
fi

printf "\e[32;1m%s\e[0m\n" "Finished running Flutter analyze with 0 issues and found Version ${PVER}."
